{"version":3,"sources":["components/sidebar/SidebarElements.js","validate.js","components/sidebar/index.js","components/posts/PostsElements.js","components/post/index.js","components/posts/index.js","components/modal/modalElements.js","components/modal/index.js","pages/homeElements.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["SideBarContainer","styled","div","SideBarWrapper","SideBarForm","form","InputContainer","ButtonsContainer","Btn","Button","FilebaseContainer","Title","h1","postSchema","Schema","id","type","String","title","required","length","min","max","description","image","use","validateImage","val","includes","message","validate","post","Sidebar","addPost","setPost","clearPost","replacePost","autoComplete","noValidate","onSubmit","e","preventDefault","p","Date","now","toString","Typography","variant","TextField","label","fullWidth","onChange","target","value","multiline","rows","sx","marginBottom","multiple","onDone","base64","disabled","color","size","onClick","Container","Wrapper","Post","onPostClick","Card","height","CardActionArea","CardMedia","component","alt","CardContent","gutterBottom","Posts","posts","TransitionGroup","map","CSSTransition","timeout","classNames","backgroundColor","borderColor","style","margin","width","bgcolor","border","boxShadow","PostModal","open","handleClose","onDelete","onEdit","Modal","onClose","overflowY","CardActions","Main","Home","useState","localStorage","JSON","parse","setPosts","useEffect","setItem","stringify","selectedPost","setselectedPost","setOpen","handleClear","oldPosts","push","newPosts","index","findIndex","splice","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAIaA,EAAmBC,IAAOC,IAAV,sNAYhBC,EAAiBF,IAAOC,IAAV,qRAcdE,EAAcH,IAAOI,KAAV,kKASXC,EAAiBL,IAAOC,IAAV,qFAKdK,EAAmBN,IAAOC,IAAV,kJAOhBM,EAAMP,YAAOQ,IAAPR,CAAH,+DAIHS,EAAoBT,IAAOC,IAAV,uIAQjBS,EAAQV,IAAOW,GAAV,mT,0BCzDLC,EAAa,I,OAAIC,GAAO,CACnCC,GAAI,CACFC,KAAMC,QAERC,MAAO,CACLC,UAAU,EACVC,OAAQ,CAAEC,IAAK,EAAGC,IAAK,KAEzBC,YAAa,CACXJ,UAAU,EACVC,OAAQ,CAAEC,IAAK,IAEjBG,MAAO,CACLR,KAAMC,OACNQ,IAAK,CAAEC,cAlBW,SAACC,GACrB,OAAOA,EAAIC,SAAS,UAAoB,KAARD,IAkB9BE,QAAS,2BAIAC,EAAW,SAACC,GACvB,OAAOlB,EAAWiB,SAASC,I,OCuEdC,I,IAAAA,EAhFf,YAAsE,IAAnDC,EAAkD,EAAlDA,QAASF,EAAyC,EAAzCA,KAAMG,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,YAcpD,OACE,cAACpC,EAAD,UACE,cAACG,EAAD,UACE,eAACC,EAAD,CAAaiC,aAAa,MAAMC,YAAU,EAACC,SAhB5B,SAACC,GAGpB,GAFAA,EAAEC,iBAEc,KAAZV,EAAKhB,GAAW,CAClB,IAAM2B,EAAC,eAAQX,GACfW,EAAE3B,GAAK4B,KAAKC,MAAMC,WAClBZ,EAAQS,GACRP,SAEAC,EAAYL,IAOV,UACE,cAACpB,EAAD,0BACA,cAACmC,EAAA,EAAD,CAAYC,QAAQ,KAApB,2BACA,cAACzC,EAAD,UACE,cAAC0C,EAAA,EAAD,CACEjC,GAAG,iBACHkC,MAAM,QACNF,QAAQ,WACRG,WAAS,EACTC,SAAU,SAACX,GAAD,OAAON,EAAQ,2BAAKH,GAAN,IAAYb,MAAOsB,EAAEY,OAAOC,UACpDA,MAAOtB,EAAKb,UAIhB,cAACZ,EAAD,UACE,cAAC0C,EAAA,EAAD,CACEjC,GAAG,4BACHkC,MAAM,cACNK,WAAS,EACTC,KAAM,EACNL,WAAS,EACTC,SAAU,SAACX,GAAD,OACRN,EAAQ,2BAAKH,GAAN,IAAYR,YAAaiB,EAAEY,OAAOC,UAE3CA,MAAOtB,EAAKR,YACZiC,GAAI,CACFC,aAAc,YAKpB,cAAC/C,EAAD,UACE,cAAC,IAAD,CACEM,KAAK,OACL0C,UAAU,EACVC,OAAQ,gBAAGC,EAAH,EAAGA,OAAH,OAAgB1B,EAAQ,2BAAKH,GAAN,IAAYP,MAAOoC,UAGtD,eAACrD,EAAD,WACE,cAACC,EAAD,CACEuC,QAAQ,YACR/B,KAAK,SACL6C,SAAoC,IAA1B/B,EAASC,GAAMX,OACzB0C,MAAM,UACNC,KAAK,QALP,oBASA,cAACvD,EAAD,CACEuC,QAAQ,YACRe,MAAM,YACNC,KAAK,QACLC,QAAS7B,EAJX,8BChFC8B,EAAYhE,IAAOC,IAAV,4CAITgE,EAAUjE,IAAOC,IAAV,gvB,oCC4BLiE,MA3Bf,YAAsC,IAAtBpC,EAAqB,EAArBA,KAAMqC,EAAe,EAAfA,YACpB,OACE,cAACC,EAAA,EAAD,CAAMb,GAAI,CAAEc,OAAQ,KAAON,QAAS,kBAAMI,EAAYrC,IAAtD,SACE,eAACwC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,UAAU,MACVH,OAAO,MACP9C,MACEO,EAAKP,MACDO,EAAKP,MACL,qGAENkD,IAAI,QAEN,eAACC,EAAA,EAAD,WACE,cAAC7B,EAAA,EAAD,CAAY8B,cAAY,EAAC7B,QAAQ,KAAK0B,UAAU,MAAhD,SACG1C,EAAKb,QAER,cAAC4B,EAAA,EAAD,CAAYC,QAAQ,QAAQe,MAAM,iBAAlC,SACG/B,EAAKR,uB,kBCPHsD,MAdf,YAAwC,IAAvBC,EAAsB,EAAtBA,MAAOV,EAAe,EAAfA,YACtB,OACE,cAACH,EAAD,UACE,cAACc,EAAA,EAAD,CAAiBN,UAAWP,EAA5B,SACGY,EAAME,KAAI,SAACjD,GAAD,OACT,cAACkD,EAAA,EAAD,CAA6BC,QAAS,IAAKC,WAAW,aAAtD,SACE,cAAC,EAAD,CAAMpD,KAAMA,EAAMqC,YAAaA,KADbrC,EAAKhB,Y,yBCPtBP,GAAMP,YAAOQ,IAAPR,CAAe,CAChCmF,gBAAiB,UACjBC,YAAa,YCITC,GAAQ,CACZC,OAAQ,YACRC,MAAO,MACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXjD,EAAG,GAiEUkD,I,MAAAA,GA9Df,YAAmE,IAA9C7D,EAA6C,EAA7CA,KAAM8D,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,OACtD,OACE,cAACC,EAAA,EAAD,CACEJ,KAAMA,EACNK,QAASJ,EACT,kBAAgB,oBAChB,mBAAiB,0BACjBtC,GAAI,CAAE2C,UAAW,UALnB,SAOE,eAAC9B,EAAA,EAAD,CAAMb,GAAI8B,GAAV,UACE,eAACf,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,UAAU,MACVjD,MACEO,EAAKP,MACDO,EAAKP,MACL,qGAENkD,IAAI,QAEN,eAACC,EAAA,EAAD,WACE,cAAC7B,EAAA,EAAD,CAAY8B,cAAY,EAAC7B,QAAQ,KAAK0B,UAAU,MAAhD,SACG1C,EAAKb,QAER,cAAC4B,EAAA,EAAD,CAAYC,QAAQ,QAAQe,MAAM,iBAAlC,SACG/B,EAAKR,oBAIZ,eAAC6E,EAAA,EAAD,WACE,cAAC,GAAD,CACErC,KAAK,QACLhB,QAAQ,YACRS,GAAI,CACF4B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAGrBpB,QAAS,kBAAMgC,EAAOjE,IATxB,kBAaA,cAAC,GAAD,CACEgC,KAAK,QACLhB,QAAQ,YACRS,GAAI,CACF4B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAGrBpB,QAAS,kBAAM+B,EAAShE,IAT1B,6BC5DGkC,GAAYhE,IAAOC,IAAV,qNAWTmG,GAAOpG,IAAOC,IAAV,0IC8EFoG,OApFf,WACE,MAA0BC,mBACxBC,aAAa1B,MAAQ2B,KAAKC,MAAMF,aAAa1B,OAAS,IADxD,mBAAOA,EAAP,KAAc6B,EAAd,KAIAC,qBAAU,WACRJ,aAAaK,QAAQ,QAASJ,KAAKK,UAAUhC,MAC5C,CAACA,IAEJ,MAAwByB,mBAAS,CAC/BxF,GAAI,GACJG,MAAO,GACPK,YAAa,GACbC,MAAO,KAJT,mBAAOO,EAAP,KAAaG,EAAb,KAOA,EAAwCqE,mBAAS,IAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAAwBT,oBAAS,GAAjC,mBAAOV,EAAP,KAAaoB,EAAb,KAyBMC,EAAc,WAClBhF,EAAQ,CAAEnB,GAAI,GAAIG,MAAO,GAAIK,YAAa,GAAIC,MAAO,MAGjDsE,EAAc,WAClBmB,GAAQ,GACRC,KAWF,OACE,eAAC,GAAD,WACE,cAAC,EAAD,CACEjF,QA3CW,SAACF,GAChB,IAAIoF,EAAQ,YAAOrC,GACnBqC,EAASC,KAAKrF,GACd4E,EAASQ,IAyCLpF,KAAMA,EACNG,QAASA,EACTC,UAAW+E,EACX9E,YAfoB,SAACL,GACzB,IAAMsF,EAAQ,YAAOvC,GACfwC,EAAQD,EAASE,WAAU,SAAC7E,GAAD,OAAOA,EAAE3B,KAAOgB,EAAKhB,MACtDsG,EAASG,OAAOF,EAAO,EAAGvF,GAC1B4E,EAASU,GACTH,OAaE,cAACb,GAAD,UAEE,cAAC,EAAD,CAAOvB,MAAOA,EAAOV,YA9CH,SAACrC,GACvBkF,GAAQ,GACRD,EAAgBjF,QA8Cd,cAAC,GAAD,CACEA,KAAMgF,EACNlB,KAAMA,EACNC,YAAaA,EACbC,SA/Ce,SAAChE,GACpB,IAAMsF,EAAQ,YAAOvC,GACfwC,EAAQD,EAASE,WAAU,SAAC7E,GAAD,OAAOA,EAAE3B,KAAOgB,EAAKhB,MACtDsG,EAASG,OAAOF,EAAO,GACvBX,EAASU,GACTvB,KA2CIE,OAzCa,SAACjE,GAClBG,EAAQH,GACRkF,GAAQ,UC7BGQ,OAXf,WAIE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAAClD,UAAW6B,QCCxBsB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.38d7956b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Filebase from \"react-file-base64\";\r\n\r\nexport const SideBarContainer = styled.div`\r\n  height: 100vh;\r\n  background: #fff;\r\n  width: 350px;\r\n  position: relative;\r\n  @media screen and (max-width: 650px) {\r\n    width: 100%;\r\n    height: auto;\r\n    margin-top: 30px;\r\n  }\r\n`;\r\n\r\nexport const SideBarWrapper = styled.div`\r\n  height: 700px;\r\n  width: 100%;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  text-align: left;\r\n  @media screen and (max-width: 650px) {\r\n    position: static;\r\n    transform: translateY(0);\r\n    padding: 20px 10px;\r\n  }\r\n`;\r\n\r\nexport const SideBarForm = styled.form`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  margin-top: 40px;\r\n  width: 100%;\r\n  padding: 0 20px;\r\n`;\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 70px;\r\n`;\r\nexport const Btn = styled(Button)`\r\n  margin-bottom: 25px !important;\r\n`;\r\n\r\nexport const FilebaseContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 2.2rem;\r\n  color: #000;\r\n  margin-bottom: 50px;\r\n  &::after {\r\n    content: \".\";\r\n    display: inline;\r\n    color: #1896ff;\r\n    font-size: 3rem;\r\n  }\r\n\r\n  @media screen and (max-width: 300px) {\r\n    font-size: 2rem;\r\n    &::after {\r\n      content: \"\";\r\n    }\r\n  }\r\n`;\r\n","import Schema from \"validate\";\r\n\r\nconst validateImage = (val) => {\r\n  return val.includes(\"image\") || val === \"\";\r\n};\r\n\r\nexport const postSchema = new Schema({\r\n  id: {\r\n    type: String,\r\n  },\r\n  title: {\r\n    required: true,\r\n    length: { min: 2, max: 32 },\r\n  },\r\n  description: {\r\n    required: true,\r\n    length: { min: 1 },\r\n  },\r\n  image: {\r\n    type: String,\r\n    use: { validateImage },\r\n    message: \"You must choose IMAGE\",\r\n  },\r\n});\r\n\r\nexport const validate = (post) => {\r\n  return postSchema.validate(post);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  SideBarContainer,\r\n  SideBarWrapper,\r\n  SideBarForm,\r\n  InputContainer,\r\n  ButtonsContainer,\r\n  Btn,\r\n  FilebaseContainer,\r\n  Title,\r\n} from \"./SidebarElements\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Typography } from \"@mui/material\";\r\nimport Filebase from \"react-file-base64\";\r\nimport { validate } from \"../../validate\";\r\n\r\nfunction Sidebar({ addPost, post, setPost, clearPost, replacePost }) {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (post.id === \"\") {\r\n      const p = { ...post };\r\n      p.id = Date.now().toString();\r\n      addPost(p);\r\n      clearPost();\r\n    } else {\r\n      replacePost(post);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SideBarContainer>\r\n      <SideBarWrapper>\r\n        <SideBarForm autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n          <Title> Remainder </Title>\r\n          <Typography variant=\"h5\">Create a post</Typography>\r\n          <InputContainer>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={(e) => setPost({ ...post, title: e.target.value })}\r\n              value={post.title}\r\n            />\r\n          </InputContainer>\r\n\r\n          <InputContainer>\r\n            <TextField\r\n              id=\"outlined-multiline-static\"\r\n              label=\"Description\"\r\n              multiline\r\n              rows={4}\r\n              fullWidth\r\n              onChange={(e) =>\r\n                setPost({ ...post, description: e.target.value })\r\n              }\r\n              value={post.description}\r\n              sx={{\r\n                marginBottom: \"20px\",\r\n              }}\r\n            />\r\n          </InputContainer>\r\n\r\n          <FilebaseContainer>\r\n            <Filebase\r\n              type=\"file\"\r\n              multiple={false}\r\n              onDone={({ base64 }) => setPost({ ...post, image: base64 })}\r\n            />\r\n          </FilebaseContainer>\r\n          <ButtonsContainer>\r\n            <Btn\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              disabled={validate(post).length !== 0}\r\n              color=\"success\"\r\n              size=\"large\"\r\n            >\r\n              Submit\r\n            </Btn>\r\n            <Btn\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n              onClick={clearPost}\r\n            >\r\n              Clear\r\n            </Btn>\r\n          </ButtonsContainer>\r\n        </SideBarForm>\r\n      </SideBarWrapper>\r\n    </SideBarContainer>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  padding: 150px 50px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-row-gap: 50px;\r\n  grid-column-gap: 30px;\r\n\r\n  @media screen and (max-width: 1200px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n  @media screen and (max-width: 850px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .transition-enter {\r\n    opacity: 0.01;\r\n    transform: translate(0, -10px);\r\n  }\r\n  .transition-enter-active {\r\n    opacity: 1;\r\n    transform: translate(0, 0);\r\n    transition: all 300ms ease-in;\r\n  }\r\n  .transition-exit {\r\n    opacity: 1;\r\n    transform: translate(0, 0);\r\n  }\r\n  .transition-exit-active {\r\n    opacity: 0.01;\r\n    transform: translate(0, 10px);\r\n    transition: all 300ms ease-in;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { CardActionArea } from \"@mui/material\";\r\n\r\nfunction Post({ post, onPostClick }) {\r\n  return (\r\n    <Card sx={{ height: 300 }} onClick={() => onPostClick(post)}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"120\"\r\n          image={\r\n            post.image\r\n              ? post.image\r\n              : \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\r\n          }\r\n          alt=\"img\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n            {post.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {post.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Container, Wrapper } from \"./PostsElements\";\r\nimport Post from \"../post\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nfunction Posts({ posts, onPostClick }) {\r\n  return (\r\n    <Container>\r\n      <TransitionGroup component={Wrapper}>\r\n        {posts.map((post) => (\r\n          <CSSTransition key={post.id} timeout={500} classNames=\"transition\">\r\n            <Post post={post} onPostClick={onPostClick} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","import { styled } from \"@mui/material/styles\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport const Btn = styled(Button)({\r\n  backgroundColor: \"#0063cc\",\r\n  borderColor: \"#0063cc\",\r\n\r\n});\r\n","import React from \"react\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { CardActionArea, CardActions } from \"@mui/material\";\r\nimport { Btn } from \"./modalElements\";\r\n\r\nconst style = {\r\n  margin: \"20px auto\",\r\n  width: \"90%\",\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 8,\r\n};\r\n\r\nfunction PostModal({ post, open, handleClose, onDelete, onEdit }) {\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n      sx={{ overflowY: \"scroll\" }}\r\n    >\r\n      <Card sx={style}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            component=\"img\"\r\n            image={\r\n              post.image\r\n                ? post.image\r\n                : \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\r\n            }\r\n            alt=\"img\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n              {post.title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {post.description}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <Btn\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            sx={{\r\n              backgroundColor: \"#38b000\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"#38b000\",\r\n              },\r\n            }}\r\n            onClick={() => onEdit(post)}\r\n          >\r\n            Edit\r\n          </Btn>\r\n          <Btn\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            sx={{\r\n              backgroundColor: \"#ba0001\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"#ba0001\",\r\n              },\r\n            }}\r\n            onClick={() => onDelete(post)}\r\n          >\r\n            Delete\r\n          </Btn>\r\n        </CardActions>\r\n      </Card>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PostModal;\r\n","import styled from \"styled-components\";\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row-reverse;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  overflow-x: hidden;\r\n  @media screen and (max-width: 650px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Main = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Sidebar from \"../components/sidebar\";\r\nimport Posts from \"../components/posts\";\r\nimport PostModal from \"./../components/modal/index\";\r\nimport { Container, Main } from \"./homeElements\";\r\n\r\nfunction Home() {\r\n  const [posts, setPosts] = useState(\r\n    localStorage.posts ? JSON.parse(localStorage.posts) : []\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\r\n  }, [posts]);\r\n\r\n  const [post, setPost] = useState({\r\n    id: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    image: \"\",\r\n  });\r\n\r\n  const [selectedPost, setselectedPost] = useState({});\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const pushPost = (post) => {\r\n    let oldPosts = [...posts];\r\n    oldPosts.push(post);\r\n    setPosts(oldPosts);\r\n  };\r\n\r\n  const handlePostClick = (post) => {\r\n    setOpen(true);\r\n    setselectedPost(post);\r\n  };\r\n\r\n  const handleDelete = (post) => {\r\n    const newPosts = [...posts];\r\n    const index = newPosts.findIndex((p) => p.id === post.id);\r\n    newPosts.splice(index, 1);\r\n    setPosts(newPosts);\r\n    handleClose();\r\n  };\r\n  const handleEdit = (post) => {\r\n    setPost(post);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setPost({ id: \"\", title: \"\", description: \"\", image: \"\" });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    handleClear();\r\n  };\r\n\r\n  const handleReplacePost = (post) => {\r\n    const newPosts = [...posts];\r\n    const index = newPosts.findIndex((p) => p.id === post.id);\r\n    newPosts.splice(index, 1, post);\r\n    setPosts(newPosts);\r\n    handleClear();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Sidebar\r\n        addPost={pushPost}\r\n        post={post}\r\n        setPost={setPost}\r\n        clearPost={handleClear}\r\n        replacePost={handleReplacePost}\r\n      />\r\n\r\n      <Main>\r\n\r\n        <Posts posts={posts} onPostClick={handlePostClick} />\r\n      </Main>\r\n      <PostModal\r\n        post={selectedPost}\r\n        open={open}\r\n        handleClose={handleClose}\r\n        onDelete={handleDelete}\r\n        onEdit={handleEdit}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport Home from \"./pages/home\";\n\nfunction App() {\n\n\n  \n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}